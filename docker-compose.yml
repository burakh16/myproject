version: "3.9"

services:
  db:
    image: postgres
    container_name: myproject-db
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5432:5432"
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: myproject-backend
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: myproject-frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
    #command: npm run serve
    volumes:
      - /app/node_modules
      - ./frontend:/app
    ports:
      - "8080:8080"
    depends_on:
      - backend
  redis:
    image: redis:alpine
  celery:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A core worker -l INFO
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
